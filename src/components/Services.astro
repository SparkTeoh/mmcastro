---
// Services section component based on AstroBackup design
// Import shared services data
import ServiceCard from './ServiceCard.astro';
import { homeServicesData } from '../data/services';
import "swiper/css/bundle";
---

{
  homeServicesData.enable && (
    <section class="overflow-hidden">
      <div class="flex flex-col justify-start gap-12 md:gap-16 bg-theme-dark py-16 md:py-28">
        <div class="container">
          <div class="flex flex-col flex-wrap justify-between gap-8 lg:flex-row lg:items-center">
            <div class="shrink-0 lg:max-w-2xl">
              {homeServicesData.subtitle && (
                <span class="mb-2.5 inline-block rounded-full border px-5 py-px border-white/5 bg-white/5 text-white">
                  {homeServicesData.subtitle}
                </span>
              )}
              {homeServicesData.title && (
                <h2 class="text-h3 text-white">
                  {homeServicesData.title}
                </h2>
              )}
            </div>
            
            <div class="flex gap-4">
              <!-- Slider Controls -->
              <button class="services-slider-btn-prev bg-secondary hover:bg-primary group/slider-control relative flex h-14 w-14 items-center justify-center rounded-full transition duration-300">
                <svg class="text-primary group-hover/slider-control:text-secondary h-6 w-6 transition duration-300 group-hover/slider-control:-translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                </svg>
              </button>
              <button class="services-slider-btn-next bg-secondary hover:bg-primary group/slider-control relative flex h-14 w-14 items-center justify-center rounded-full transition duration-300">
                <svg class="text-primary group-hover/slider-control:text-secondary h-6 w-6 transition duration-300 group-hover/slider-control:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
              </button>
              
              <!-- View All Services Button -->
              <a href="/services/" class="relative flex items-center">
                <span class="btn btn-outline btn-outline-transparent has-text-flip-animation before:btn before:btn-outline-transparent after:btn after:btn-outline-transparent" data-content="了解我们的服务">
                  了解我们的服务
                </span>
                <span class="icon">
                  <svg class="h-4 w-4 text-secondary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 17L17 7M17 7H7M17 7V17"></path>
                  </svg>
                </span>
              </a>
            </div>
          </div>
        </div>
        
        <div class="has-light-shape relative after:absolute after:inset-x-0 after:h-screen after:w-full after:top-[17.0625rem] after:bg-stone-50 after:md:top-[18rem] pb-4">
          <div class="relative z-10 container">
            <!-- Swiper Container -->
            <div class="swiper services-swiper w-full">
              <div class="swiper-wrapper">
                {homeServicesData.services.map((service) => (
                  <div class="swiper-slide !h-auto p-2">
                    <ServiceCard service={service} showCoreSolution={false} />
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

<script>
  document.addEventListener("DOMContentLoaded", async function () {
    // Wait a bit for the DOM to be fully ready
    setTimeout(async () => {
      try {
        const { Swiper } = await import("swiper");
        const { Navigation, Autoplay } = await import("swiper/modules");

        // Check if the swiper container exists
        const swiperContainer = document.querySelector(".services-swiper");
        if (!swiperContainer) {
          console.error("Swiper container not found");
          return;
        }

        // Initialize services Swiper with navigation
        const swiper = new Swiper(".services-swiper", {
          modules: [Navigation, Autoplay],
          speed: 1000,
          spaceBetween: 20,
          slidesPerView: 1,
          breakpoints: {
            768: {
              slidesPerView: 2,
            },
            1024: {
              slidesPerView: 3,
            },
          },
          loop: true,
          autoplay: {
            delay: 3000,
            disableOnInteraction: false,
          },
          navigation: {
            nextEl: ".services-slider-btn-next",
            prevEl: ".services-slider-btn-prev",
          },
        });

        console.log("Services Swiper initialized successfully", swiper);
        
        // Test navigation buttons
        const nextBtn = document.querySelector(".services-slider-btn-next");
        const prevBtn = document.querySelector(".services-slider-btn-prev");
        console.log("Navigation buttons found:", { nextBtn: !!nextBtn, prevBtn: !!prevBtn });
      } catch (error) {
        console.error("Error initializing Swiper:", error);
      }
    }, 100);
  });
</script>

<style>
  .box-shadow-primary {
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  }
  
  .btn-primary {
    background-color: #3b82f6;
    color: white;
    border: 2px solid #3b82f6;
  }
  
  .btn-primary:hover {
    background-color: #2563eb;
    border-color: #2563eb;
  }
  
  .btn-outline-transparent {
    border: 2px solid rgba(255, 255, 255, 0.3);
    color: white;
    background: transparent;
  }
  
  .btn-outline-transparent:hover {
    border-color: white;
    background: rgba(255, 255, 255, 0.1);
  }
  
  .text-gold {
    color: #B4A180;
  }

  /* Swiper custom styles */
  .services-swiper {
    overflow: visible;
    width: 100%;
  }
  
  .services-swiper .swiper-wrapper {
    display: flex;
    align-items: stretch;
  }
  
  .services-swiper .swiper-slide {
    height: auto;
    display: flex;
    flex-direction: column;
  }
  
  .services-swiper .swiper-slide-active {
    transform: scale(1.02);
    transition: transform 0.3s ease;
  }
  
  /* Ensure proper spacing */
  .services-swiper .swiper-slide > * {
    flex: 1;
    display: flex;
    flex-direction: column;
  }
  
  /* Mobile-specific optimizations */
  @media (max-width: 768px) {
    .hero-title {
      font-size: 1.75rem;
      line-height: 1.2;
      letter-spacing: -0.02em;
    }
    
    .hero-subtitle {
      font-size: 0.875rem;
      line-height: 1.5;
    }
    
    .hero-description {
      font-size: 0.9rem;
      line-height: 1.6;
    }
  }

  @media (max-width: 480px) {
    .hero-title {
      font-size: 1.5rem;
      line-height: 1.3;
    }
    
    .hero-subtitle {
      font-size: 0.8rem;
    }
    
    .hero-description {
      font-size: 0.85rem;
    }
  }
</style>
